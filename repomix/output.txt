This file is a merged representation of a subset of the codebase, containing specifically included files, combined into a single document by Repomix.
The content has been processed where line numbers have been added.

<files>
This section contains the contents of the repository's files.

<file path="components/TodoList.tsx">
 1: "use client";
 2: 
 3: import { useEffect, useState } from "react";
 4: import type { Todo } from "@/lib/types/todo";
 5: import { TodoItem } from "@/components/TodoItem";
 6: import { getTodos } from "@/backend/todo/actions";
 7: 
 8: export function TodoList() {
 9:   const [todos, setTodos] = useState<Todo[]>([]);
10:   const [isLoading, setIsLoading] = useState(true);
11: 
12:   const fetchTodos = async () => {
13:     setIsLoading(true);
14:     const fetchedTodos = await getTodos();
15:     // Simple sort: incomplete first
16:     const sortedTodos = fetchedTodos.sort((a, b) => {
17:       if (a.completed === b.completed) {
18:         return 0;
19:       }
20:       return a.completed ? 1 : -1;
21:     });
22:     setTodos(sortedTodos);
23:     setIsLoading(false);
24:   };
25: 
26:   useEffect(() => {
27:     fetchTodos();
28:   }, []);
29: 
30:   const handleTodoUpdated = () => {
31:     fetchTodos();
32:   };
33: 
34:   if (isLoading) {
35:     return <div>Loading todos...</div>;
36:   }
37: 
38:   if (todos.length === 0) {
39:     return <div>No todos yet. Add one above!</div>;
40:   }
41: 
42:   return (
43:     <div className="max-h-[400px] overflow-y-auto">
44:       {todos.map((todo) => (
45:         <TodoItem key={todo.id} todo={todo} onTodoUpdated={handleTodoUpdated} />
46:       ))}
47:     </div>
48:   );
49: }
</file>

</files>
